Limits Management Hardware for Thermal management

The LMH block is a hardware IP for every CPU cluster to monitor rapid changes in
thermal conditions and perform quick thermal mitigation to keep the hardware
within limits. The LMH hardware responds to thermal variation amongst the CPUs
in the cluster by requesting the OSM (frequency scaling) hardware to limit the
clock frequency and voltage.

The LMH (thermal) driver exports a virtual sensor that can be used to set the
thermal limits on the hardware. It also acts as a  platform CPU cooling device,
which registers with the CPU cooling device interface. All CPU device nodes
should reference the corresponding LMH instance in device tree. All CPUs
referencing the same LMH node will be associated with one instance of the
LMH cooling device.

Required Properties:

- compatible:
	Value type: <string>
	Definition: Must be "qcom,lmh"

- reg:
	Value type: <regaddr size >
	Definition: Address range of the LMH DCVS registers.

- interrupts:
	Value type: <interrupt_type interrupt_number interrupt_trigger_type>
	Definition: Should specify irq line for the debug interrupt generated by
			the LMH hardware. LMH hardware will generate this
			interrupt whenever it changes CPU throttling parameters

- qcom,affinity:
	Value type: <u32>
	Definition: Must specify cluster affinity of this hardware instance

- #thermal-sensor-cells : Should be <0>. See ./thermal.txt for a description.

Optional Properties:

- isens_vref-supply:
	Value type: <phandle>
	Definition: Should specify the phandle of the vref regulator used by
			the isens hardware. This active only regulator will be
			enabled by LMH DCVSh.

- isens-vref-settings:
	Value type: <u32 array>
	Definition: Should specify the min voltage(uV), max voltage(uV) and
			max load(uA) for the isens vref regulator. This
			property is valid only if there is valid entry for
			isens_vref-supply.

Example:

	lmh0: limits-hw-thermal@0 {
		compatible = "qcom,lmh";
		interrupts = <GIC_SPI 38 IRQ_TYPE_LEVEL_HIGH>;
		qcom,affinity = <0>;
		isens_vref-supply = <&pm8998_l1_ao>;
		isens-vref-settings = <880000 880000 36000>;
	};

	CPU0: cpu@0 {
		device_type = "cpu";
		compatible = "arm,armv8";
		reg = <0x0 0x0>;
		qcom,lmh-thermal = <&lmh0>;;
	};
